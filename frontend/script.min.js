async function getRecipeCount(){try{const e=localStorage.getItem("username"),t=await fetch(`/getRecipeCount/${encodeURIComponent(e)}`,{method:"GET",headers:{"Content-Type":"application/json"}}),n=String(await t.json()),i=document.getElementById("recipeCount");i.innerText="You have logged "+n+" recipes!"}catch(e){console.log(e,"Error fetching recipe count"),alert("Something Went Wrong: "+e.message)}}async function getRecipes(){const e=document.getElementById("myRecipes");e.innerHTML="";try{const t=localStorage.getItem("username"),n=await fetch(`/getRecipe/${encodeURIComponent(t)}`,{method:"GET",headers:{"Content-Type":"application/json"}}),i=await n.json();for(let t=0;t<i.length;t++){const n=document.createElement("p");n.innerText="Ingredients";const r=document.createElement("p");r.innerText="Steps",n.className="recipeHeader",r.className="recipeHeader";let o=document.createElement("div");for(let e=0;e<i[t].ingredients.length;e++){let n=document.createElement("p");n.innerHTML=i[t].ingredients[e],o.appendChild(n)}let s=document.createElement("div");for(let e=0;e<i[t].steps.length;e++){let n=document.createElement("p");n.innerHTML=i[t].steps[e],s.appendChild(n)}const c=document.createElement("div");c.className="recipe",c.innerHTML=`\n                <div class="titleDelete">\n                    <h3 class="recipeTitle">${i[t].title}</h3>\n                    <button class="deleteButton">Delete</button>\n                </div>\n                <div class="recipeContent hidden">\n                    <p class="recipeHeader">Description</p>\n                    <p class="recipeDescription">${i[t].description}</p>\n                    <p class="serves"><span class="recipeHeader">Serves:</span> ${i[t].serves}</p>\n                </div>\n            `;const a=c.querySelector(".recipeContent"),l=o.firstChild;o.insertBefore(n,l);const d=s.firstChild;s.insertBefore(r,d),a.appendChild(o),a.appendChild(s);const p=c.querySelector(".recipeTitle");p.addEventListener("click",()=>{a.classList.toggle("hidden"),a.style.backgroundColor="rgb(255, 255, 255)"}),e.appendChild(c)}deleteRecipes()}catch(e){alert("Could not fetch recipes",e.message)}}async function deleteRecipes(){const e=document.getElementsByClassName("titleDelete");for(let t=0;t<e.length;t++){const n=e[t],i=n.querySelector(".deleteButton");i.addEventListener("click",async()=>{const e=n.querySelector(".recipeTitle").textContent.trim();try{const t=await fetch(`/deleteRecipe/${encodeURIComponent(e)}`,{method:"DELETE",headers:{"Content-Type":"application/json"}});await t.json();await getRecipes(),await getRecipeCount()}catch(e){alert("Could not delete Recipe: "+e.message)}})}}const usernameLocal=localStorage.getItem("username"),registerBody=document.getElementById("registerBody");registerBody&&usernameLocal&&(document.getElementById("userWelcome").innerHTML="Welcome "+usernameLocal+"!");const signInForm=document.getElementById("signInForm");signInForm?signInForm.addEventListener("submit",async e=>{e.preventDefault();const t=new FormData(e.target),n=Object.fromEntries(t.entries());let i=n.username;try{const e=await fetch("/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});console.log(e),e.ok?(console.log("Success"),window.location.replace("userDashboard.html"),localStorage.setItem("username",i)):alert("Login failed: "+result.message)}catch(e){console.error(e),alert("An error occurred while logging in.")}}):console.log("Sign in not found");const registerForm=document.getElementById("registerForm");registerForm&&registerForm.addEventListener("submit",async e=>{e.preventDefault();const t=new FormData(e.target),n=Object.fromEntries(t.entries());try{const e=await fetch("/user-register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});e.ok?(alert("Registration Successfull"),window.location.replace("index.html")):alert("Could not register, please try again.")}catch(e){console.error(e),alert("An error occurred while submitting the form.")}});const username=localStorage.getItem("username"),logoutButton=document.getElementById("logout");logoutButton.addEventListener("click",()=>{localStorage.clear(),window.location.replace("index.html")}),getRecipeCount(),getRecipes();const createRecipeButton=document.getElementById("createRecipeButton"),createRecipeWrapper=document.getElementById("createRecipeFormWrapper"),minimiseRecipeButton=document.getElementById("minimiseRecipeButton");minimiseRecipeButton.style.opacity="0.5",minimiseRecipeButton.style.pointerEvents="none",minimiseRecipeButton.addEventListener("click",()=>{createRecipeWrapper&&(createRecipeWrapper.style.opacity="0.5",createRecipeWrapper.style.pointerEvents="none"),createRecipeButton.style.opacity="1",createRecipeButton.style.pointerEvents="auto",minimiseRecipeButton.style.opacity="0.5",minimiseRecipeButton.style.pointerEvents="none",createRecipeWrapper.innerHTML=""}),createRecipeButton.addEventListener("click",()=>{minimiseRecipeButton.style.opacity="1",minimiseRecipeButton.style.pointerEvents="auto",createRecipeButton.style.opacity="0.5",createRecipeButton.style.pointerEvents="none",createRecipeWrapper.style.opacity="1",createRecipeWrapper.style.pointerEvents="auto",createRecipeWrapper.innerHTML='\n        <div id="createRecipeForm">\n            <label for="title">Title (Must Be Unique)</label>\n            <input type="text" id="title" name="title">\n\n            <label for="description">Description</label>\n            <textarea type="text" id="description" name="description" rows="4" cols="50"></textarea>\n\n            <label for="serves">Serves</label>\n            <input type="number" id="serves" name="serves">\n\n            <label for="ingredients">Ingredients</label>\n            <input type="text" id="ingredients" name="ingredients">\n            <button id="addIngredientButton">Add</button>\n            <div id="ingredientsWrapper"></div>\n\n            <label for="steps">Steps</label>\n            <input type="text" id="steps" name="steps">\n            <button id="addStepButton">Add</button>\n            <div id="stepsWrapper"></div>\n\n            <button id="addRecipe">Add Recipe</button>\n        </div>\n    ';const e=document.getElementById("addStepButton"),t=document.getElementById("stepsWrapper");let n=1;e.addEventListener("click",()=>{const e=document.getElementById("steps").value;if(e.trim()){t.style.visibility="visible";const i=document.createElement("div");i.textContent=n+". "+e,t.appendChild(i),document.getElementById("steps").value="",n+=1}else alert("Please enter a step.")});const i=document.getElementById("addIngredientButton"),r=document.getElementById("ingredientsWrapper");i.addEventListener("click",()=>{const e=document.getElementById("ingredients").value;if(e.trim()){r.style.visibility="visible";const t=document.createElement("div");t.textContent=e,r.appendChild(t),document.getElementById("ingredients").value=""}else alert("Please enter an ingredient.")}),document.getElementById("addRecipe").addEventListener("click",async()=>{const e=document.getElementById("title").value,t=document.getElementById("description").value,n=document.getElementById("serves").value;if(!e)return void alert("Please enter a title");if(!t)return void alert("Please enter a description");if(!n||isNaN(n))return void alert("Please enter a valid number for serves");const i=document.getElementById("ingredientsWrapper"),r=Array.from(i.children).map(e=>e.textContent),o=document.getElementById("stepsWrapper"),s=Array.from(o.children).map(e=>e.textContent),c=localStorage.getItem("username"),a={title:e,description:t,serves:n,ingredients:r,steps:s,username:c};try{const e=await fetch("/addRecipe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});e.ok?alert("Recipe added successfully!"):alert("Failed to add recipe. Please check inputs")}catch(e){alert("Could not connect to MKP, please try again",e.message)}const l=document.getElementById("ingredientsWrapper"),d=document.getElementById("stepsWrapper");l.style.visibility="hidden",l.style.height="0px",d.style.visibility="hidden",d.style.height="0px",getRecipes();const p=document.querySelectorAll("input, textarea");p.forEach(e=>{e.value=""})})});